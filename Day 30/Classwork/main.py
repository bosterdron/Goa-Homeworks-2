# 1) ჩამოთვალეთ ყველა დღეს ნასწავლი error'ის ტიპი და ახსენით რა რა შემთხვევაში გამოდის:

# - TypeError: ეს შეცდომა მაშინ ხდება, როდესაც ვცდილობთ სხვადასხვა ტიპების ოპერაციებს (მაგალითად, სტრიქონისა და რიცხვის დაყოფა).
# - IndexError: ეს ხდება, როდესაც ვცდილობთ წვდომას სიაში ან სტრიქონში იმ ელემენტზე, რომლის ინდექსი არ არსებობს.
# - ValueError: ეს შეცდომა მაშინ ხდება, როდესაც ვცდილობთ სტრიქონი რიცხვად გარდავქმნათ, მაგრამ ის არ წარმოადგენს ვალიდურ რიცხვს.
# - NameError: ეს შეცდომა მაშინ ხდება, როდესაც ვცდილობთ გამოვიყენოთ ცვლადი ან ფუნქცია, რომელიც არ არის განსაზღვრული.

# 2) NameError-ი მაგალითი და გამკლავება try/except-ით:

try:
    print(undeclared_variable)  # ეს გამოიწვევს NameError-ს, რადგან undeclared_variable არ არის განსაზღვრული.
except NameError:
    print("შეცდომა: ცვლადი 'undeclared_variable' არ არის განსაზღვრული.")

# 3) IndexError-ი მაგალითი და გამკლავება try/except-ით:

my_list = [1, 2, 3]

try:
    print(my_list[5])  # ეს გამოიწვევს IndexError-ს, რადგან სიაში არ არის ინდექსი 5.
except IndexError:
    print("შეცდომა: სიაში არაა ინდექსი 5.")

# 4) ValueError-ი მაგალითი და გამკლავება try/except-ით:

try:
    num = int("abc")  # ეს გამოიწვევს ValueError-ს, რადგან "abc" არ შეიძლება გადაიქცეს რიცხვად.
except ValueError:
    print("შეცდომა: 'abc' არ შეიძლება გადაიქცეს რიცხვად.")

# 5) try/except-ი როლი:

# try/except გამოიყენება მაშინ, როდესაც წინასწარ არ ვიცით, რომ შეიძლება მოხდეს შეცდომა.
# მაგალითად, როდესაც ვიღებთ მონაცემებს მომხმარებლისგან ან ვასრულებთ ოპერაციებს, რომლებიც დამოკიდებულია ამ მონაცემებზე,
# ვხმარობთ try-ს მცდელობისთვის, ხოლო თუ ხდება შეცდომა, except გვეხმარება მისი გადაჭრაში,
# ასე რომ პროგრამა არ დაიხურება და გააგრძელებს მუშაობას.
